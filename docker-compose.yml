# Docker Compose for RedisQ Testing
version: '3.13'

services:
  # Redis service
  redis:
    image: redis:7-alpine
    container_name: redisq-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # RedisQ application
  redisq:
    build: .
    container_name: redisq-app
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./:/app
    command: python test_redisq.py
    networks:
      - redisq-network

  # RedisQ example usage
  redisq-example:
    build: .
    container_name: redisq-example
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./:/app
    command: python example_usage.py
    networks:
      - redisq-network

  # Redis CLI for debugging
  redis-cli:
    image: redis:7-alpine
    container_name: redisq-cli
    depends_on:
      - redis
    command: redis-cli -h redis
    networks:
      - redisq-network
    profiles:
      - debug

volumes:
  redis_data:

networks:
  redisq-network:
    driver: bridge
